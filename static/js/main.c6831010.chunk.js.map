{"version":3,"sources":["Esineet.js","App4.js","serviceWorker.js","store.js","index.js"],"names":["Esineet","props","useState","data","setData","dataNoudettu","setDataNoudettu","valittuPaikkakunta","setValittuPaikkakunta","useEffect","a","axios","id","result","JSON","parse","request","response","items","haeDataa","onClick","map","alkio","title","location","App4","kategoriaValittu","setKategoriaValittu","kategoriaId","setKategoriaId","console","log","categories","Boolean","window","hostname","match","Pelitila","NIMI_X_MUUTTUI","NIMI_O_MUUTTUI","ALOITA_PAINETTU","RUUTU_VALITTU","PELI_OHI","voittorivit","nap","initialState","pelilauta","nappula","paikka","tila","NIMET_PUUTTEELLISET","pelaajat","pelivuoroX","voittaja","peliK채ynniss채","voittaakoT채m채Pelaaja","lauta","pelaaja","some","x","Provider","createContext","StateProvider","children","useReducer","state","action","kopio","slice","type","length","Error","dispatch","value","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6831010.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n\n//Axios, useEffect Context API, usereducer, REDUX\nconst Esineet = (props) => {\n    const [data,setData] = useState([\"Dataa haetaan\"])\n    const [dataNoudettu, setDataNoudettu] = useState(false)\n    const [valittuPaikkakunta, setValittuPaikkakunta] = useState(\"\")\n    useEffect(()=>{\n        async function haeDataa(){\n            let result = await axios('https://api.huuto.net/1.1/categories/'+props.id+'/items?area='+valittuPaikkakunta\n            )\n            //console.log(result)\n            let a = JSON.parse(result.request.response).items\n            setData(JSON.parse(result.request.response).items); \n            setDataNoudettu(true);   \n        }\n        \n        haeDataa();\n\n    },[props.id, valittuPaikkakunta])\n    \n    const paikkakuntaTamperePainettu = ()=>{\n        setValittuPaikkakunta(\"Tampere\")\n    }\n    const  paikkakuntaHelsinkiPainettu = ()=>{\n        setValittuPaikkakunta(\"Helsinki\")\n    }\n    \n    return (<div>\n        <button onClick={paikkakuntaTamperePainettu}>Tampere</button>\n        <button onClick={paikkakuntaHelsinkiPainettu}>Helsinki</button>\n\n        {!dataNoudettu ? \"Odotetaan dataa...\" :  data.map(alkio=><div>{alkio.title +\" Paikassa:\"+alkio.location}</div>)}\n       \n        </div>)\n\n}\n\nexport default Esineet","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Esineet from './Esineet'\n//useReducer = REDUX\n//Context API\n\n//Axios, useEffect\nconst App4 = () => {\n    const [data,setData] = useState([\"Dataa haetaan\"])\n    const [kategoriaValittu,setKategoriaValittu] = useState(false)\n    const [kategoriaId,setKategoriaId] = useState(0)\n   \n    useEffect(()=>{\n      async function haeDataa(){\n        let result = await axios('https://api.huuto.net/1.1/categories');\n        console.log(JSON.parse(result.request.response).categories);\n        setData(JSON.parse(result.request.response).categories);\n      }\n      \n      haeDataa();\n\n  },[])\n\n    const kategoriaNappiPainettu = (id) => {\n\n      setKategoriaValittu(true);\n      setKategoriaId(id);\n     // console.log(id)\n    }\n\n    return (<div>\n\n        {data.map(alkio=><button onClick={()=>kategoriaNappiPainettu(alkio.id)}>{alkio.title}</button>)\n        }\n        {kategoriaValittu && <Esineet id = {kategoriaId} ></Esineet>}\n        </div>)\n}\n\nexport default App4","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// store.js\nimport React, {createContext, useReducer} from 'react';\n\nconst Pelitila = {\n\n    NIMI_X_MUUTTUI: 'NIMI_X_MUUTTUI',\n    NIMI_O_MUUTTUI: 'NIMI_O_MUUTTUI',\n    ALOITA_PAINETTU: 'ALOITA_PAINETTU',\n    RUUTU_VALITTU: 'RUUTU_VALITTU',\n    PELI_OHI: 'PELI_OHI'\n}\nconst voittorivit =\n    [[0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]]\n\nconst nap = {\n    x: \"X\",\n    o: \"O\",\n    tyhja: \" \"\n};\nconst initialState = {\n    pelilauta:\n        [{ nappula: nap.tyhja, paikka: 0 }, { nappula: nap.tyhja, paikka: 1 }, { nappula: nap.tyhja, paikka: 2 },\n        { nappula: nap.tyhja, paikka: 3 }, { nappula: nap.tyhja, paikka: 4 }, { nappula: nap.tyhja, paikka: 5 },\n        { nappula: nap.tyhja, paikka: 6 }, { nappula: nap.tyhja, paikka: 7 }, { nappula: nap.tyhja, paikka: 8 }],\n    tila: Pelitila.NIMET_PUUTTEELLISET, pelaajat: [\"\",\"\"], pelivuoroX: true, voittaja: -1, peliK채ynniss채: false\n}\n\n\nconst voittaakoT채m채Pelaaja = (lauta, pelaaja) => {\n\n    return voittorivit.some(x => {\n        if (lauta[x[0]] != nap.tyhja\n            && lauta[x[0]].nappula == pelaaja\n            && lauta[x[1]].nappula == pelaaja\n            && lauta[x[2]].nappula == pelaaja) {\n            return true\n        }\n    });\n}\n\n//const initialState = {};\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    \n    let kopio = state.pelaajat.slice()\n\n    switch (action.type) {\n\n        case Pelitila.ALOITA_PAINETTU:\n\n            if (state.pelaajat[0].length > 0 && state.pelaajat[1].length > 0) {\n                return { ...state, peliK채ynniss채: true };\n            } else {\n                return { ...state, peliK채ynniss채: false };\n            }\n\n        case Pelitila.NIMI_O_MUUTTUI:\n\n            kopio[0] = action.data\n            return { ...state, pelaajat: kopio };\n\n        case Pelitila.NIMI_X_MUUTTUI:\n\n            kopio[1] = action.data\n            return { ...state, pelaajat: kopio };\n\n        case Pelitila.RUUTU_VALITTU:\n\n            if (state.pelilauta[action.data].nappula == \" \" && state.voittaja == -1) {\n                let kopio = state.pelilauta.slice()\n                if (state.pelivuoroX) {\n\n                    kopio[action.data].nappula = nap.x\n                    if (voittaakoT채m채Pelaaja(kopio, nap.x)) {\n                        return { ...state, pelilauta: kopio, pelivuoroX: false, voittaja: 1 }\n                    } else {\n                        return { ...state, pelilauta: kopio, pelivuoroX: false }\n                    }\n                    //setPelilauta(kopio)\n                    //setPelivuoroX(false)\n                } else {\n\n                    kopio[action.data].nappula = nap.o\n                    if (voittaakoT채m채Pelaaja(kopio, nap.o)) {\n                        return { ...state, pelilauta: kopio, pelivuoroX: false, voittaja: 0 }\n                    } else {\n\n                        return { ...state, pelilauta: kopio, pelivuoroX: true }\n                    }\n\n                    //setPelilauta(kopio)\n                    //setPelivuoroX(true)\n                }\n            }\n\n        default:\n            throw new Error();\n    }\n  }, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App1 from './App1';\n//import App2 from './App2';\n//import App3 from './App3';\nimport App4 from './App4';\n//import App5 from './App5';\n//import App6 from './App6';\n//import App6 from './App6';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './store.js';\n \nconst app = (\n    <StateProvider>\n      <App4 />\n    </StateProvider>\n  ); \n//ReactDOM.render(<App5/>, document.getElementById('root'));\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}